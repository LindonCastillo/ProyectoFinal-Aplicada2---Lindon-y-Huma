@page "/ConsultaUsuarios"

<div class="form-row">

    <div class="col">
        <label for="desde_date">Desde:</label>
        <input id="desde_date" class="form-control" type="datetime-local" @bind="desdeFecha" />
    </div>

    <div class="col">
        <label for="hasta_date">Hasta:</label>
        <input id="hasta_date" class="form-control" type="datetime-local" @bind="hastaFecha" />
        <button class="btn btn-primary" @onclick="filtradoPorFecha">Filtar por Fecha</button>
    </div>

    <div class="col">
        <input type="text" class="form-control" placeholder="Criterio" @onfocusin="Filtrar" @onfocusout="Filtrar" @onclick="Filtrar" @bind="Criterio" />
    </div>

    <div class="col">
        <select class="form-control" @onclick="Filtrar" @bind="filtro">
            <option value="0">Todos</option>
            <option value="1">Id</option>
            <option value="2">Nombre</option>
            <option value="3">Email</option>
            <option value="4">Nivel de Usuario</option>
        </select>
    </div>
</div>

<h3>Consulta de Usuario</h3>
@if (Lista == null)
{
    <p>No hay datos que mostrar</p>
    return;
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Nombre</th>
                <th>Email</th>
                <th>Nivel de Usuario</th>
                <th>Fecha de Ingreso</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Lista)
            {
                <tr>
                    <td>@item.UsuarioId</td>
                    <td>@item.NombrePersona</td>
                    <td>@item.EmailUsuario</td>
                    <td>@item.NivelUsuario</td>
                    <td>@item.FechaIngreso</td>
                    <td><a class="btn btn-outline-info" href="Usuarios/@item.UsuarioId">Ver</a></td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
        List<Usuarios> Lista = new List<Usuarios>();

        protected override void OnInitialized()
        {
            Lista = usuariocontroller.GetList(A => true);
        }


        private string filtro;
        private string Criterio;
        private bool fechaFiltro;

        DateTime hastaFecha = DateTime.Now;
        DateTime desdeFecha = DateTime.Now;

        public List<Usuarios> listado { get; set; }

        private void filtradoPorFecha()
        {
            try
            {
                Lista = Lista.Where(p => p.FechaIngreso >= desdeFecha && p.FechaIngreso <= ).ToList();
            }
            catch (Exception)
            {

                //wey klok
            }

        }

        private void Filtrar()
        {

            try
            {
                int filtroIndex = Int32.Parse(filtro);

                if (Criterio.Trim().Length > 0)
                {
                    switch (filtroIndex)
                    {
                        //Todos
                        case 0:
                            listado = usuariocontroller.GetList(p => true);
                            Lista = listado;
                            break;
                        //Id
                        case 1:
                            int id = 0;
                            if (int.TryParse(Criterio, out id))
                            {
                                id = Convert.ToInt32(Criterio);
                                listado = usuariocontroller.GetList(p => p.UsuarioId == id);
                                Lista = listado;
                            }
                            break;
                        //Nombre
                        case 2:
                            listado = usuariocontroller.GetList(p => p.NombrePersona.Contains(Criterio));
                            Lista = listado;
                            break;
                        //Email
                        case 3:
                            listado = usuariocontroller.GetList(p => p.EmailUsuario.Contains(Criterio));
                            Lista = listado;
                            break;
                        //NivelUsuario
                        case 4:
                            listado = usuariocontroller.GetList(p => p.NivelUsuario.Contains(Criterio));
                            Lista = listado;
                            break;
                    }
                }
                else
                {
                
                    listado = usuariocontroller.GetList(p => true);
                    Lista = listado;
                }
            }
        }
        catch (Exception)
        {
            //algo
        }
}
